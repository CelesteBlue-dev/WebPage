
// Functions

@mixin shadow-inside($side: 0, $aplha: 0.5){
    -moz-box-shadow: inset $side 2px 25px 0px rgba(#000000, $aplha);
    -webkit-box-shadow: inset $side 2px 25px 0px rgba(#000000, $aplha);
    -o-box-shadow: inset $side 2px 25px 0px rgba(#000000, $aplha);
    box-shadow: inset $side 2px 25px 0px rgba(#000000, $aplha);
}

@mixin shadow-outside($side: 0, $aplha: 0.3){
    -moz-box-shadow: $side 2px 25px 0px rgba(#000000, $aplha);
    -webkit-box-shadow: $side 2px 25px 0px rgba(#000000, $aplha);
    -o-box-shadow: $side 2px 25px 0px rgba(#000000, $aplha);
    box-shadow: $side 15px 20px 5px rgba(#000000, $aplha);
}

@mixin shadow-focus($alpha: 0.5){
    -moz-box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha), 0px 0px 25px 0px rgba(0, 0, 0, $alpha);
    -webkit-box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha), 0px 0px 25px 0px rgba(0, 0, 0, $alpha);
    -o-box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha), 0px 0px 25px 0px rgba(0, 0, 0, $alpha);
    box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha), 0px 0px 25px 0px rgba(0, 0, 0, $alpha);
}

@mixin shadow-colomn($alpha: 0.5){
    -moz-box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha);
    -webkit-box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha);
    -o-box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha);
    box-shadow: inset 0px 10px 15px -8px rgba(0, 0, 0, $alpha);
}

@mixin createGridSystem($gridCols: 24, $gridWidth: 30px, $marginWidth: 10px){
    .page {
        @if $marginWidth == 0 {
            width: $gridCols * $gridWidth;
        }
        @else {
            //width: $gridCols * $gridWidth + $gridCols * $marginWidth - $marginWidth;
            width: ($gridWidth + $marginWidth) * $gridCols;
        }
        margin: 20px auto 0;
        border-top: 1px solid $beige-line;
        border-left: 1px solid $beige-line;
        border-right: 1px solid $beige-line;
        position: relative;
    }
    .row {

    }
    .column {
        float: left;
        display: inline;
        margin: 0 $marginWidth / 2;
    }
    @for $i from 1 through $gridCols {
        .col-#{$i} {
            width: ($gridWidth + $marginWidth) * $i - $marginWidth;
        }
    }
}
